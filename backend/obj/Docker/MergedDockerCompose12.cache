name: dockercompose9701034542880857787
services:
  api:
    build:
      context: C:\Projects\ReactTSAspNetCoreAppGithub\ReactTSAspNetCoreApp\backend\Api
      dockerfile: Dockerfile
    depends_on:
      messagebroker2:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: api
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\User\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\User\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\User\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\User\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  distributedcache2:
    container_name: distributedcache2
    image: redis
    networks:
      default: null
    ports:
      - mode: ingress
        target: 6379
        published: "6378"
        protocol: tcp
    restart: always
  messagebroker2:
    container_name: messagebroker2
    environment:
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_USER: guest
    hostname: financeapp-mq
    image: rabbitmq:management
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5672
        published: "5673"
        protocol: tcp
      - mode: ingress
        target: 15672
        published: "15673"
        protocol: tcp
    restart: always
networks:
  default:
    name: dockercompose9701034542880857787_default