name: dockercompose9701034542880857787
services:
  api:
    build:
      context: C:\Projects\ReactTSAspNetCoreAppGithub\ReactTSAspNetCoreApp\backend\Api
      dockerfile: Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
        LAUNCHING_FROM_VS: "true"
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Api
    depends_on:
      messagebroker2:
        condition: service_started
    entrypoint:
    - dotnet
    - --roll-forward
    - Major
    - /VSTools/DistrolessHelper/DistrolessHelper.dll
    - --wait
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: api
    labels:
      com.microsoft.visual-studio.project-name: Api
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages
        --additionalProbingPath /.nuget/fallbackpackages  "/app/Api.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: dotnet --roll-forward Major
        /VSTools/DistrolessHelper/DistrolessHelper.dll --stop dotnet
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 8080
      protocol: tcp
    - mode: ingress
      target: 8081
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
      target: /HotReloadAgent
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\linux-x64\net8.0
      target: /VSTools
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\User\AppData\Roaming\ASP.NET\Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\User\AppData\Roaming\Microsoft\UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\User\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\User\AppData\Roaming\ASP.NET\Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\User\AppData\Roaming\Microsoft\UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  messagebroker2:
    container_name: messagebroker2
    environment:
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_USER: guest
    hostname: financeapp-mq
    image: rabbitmq:management
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5672
      published: "5673"
      protocol: tcp
    - mode: ingress
      target: 15672
      published: "15673"
      protocol: tcp
    restart: always
networks:
  default:
    name: dockercompose9701034542880857787_default